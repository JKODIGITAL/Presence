# Dockerfile.common-base - Base comum para API e Worker com CUDA, Conda, Mamba e libs do sistema
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# --- Ambiente e Configuração ---
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/conda/bin:$PATH" \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility \
    GST_DEBUG=2 \
    LD_LIBRARY_PATH="/usr/lib/x86_64-linux-gnu:/usr/lib/i386-linux-gnu${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}" \
    GST_PLUGIN_PATH="/usr/lib/x86_64-linux-gnu/gstreamer-1.0" \
    GST_PLUGIN_SYSTEM_PATH="/usr/lib/x86_64-linux-gnu/gstreamer-1.0" \
    GST_PLUGIN_SCANNER="/usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-plugin-scanner"

# --- Instalação de Dependências do Sistema ---
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    libopencv-dev \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libglib2.0-dev \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    curl \
    git \
    ca-certificates \
    # GStreamer e dependências para câmeras
    gstreamer1.0-tools \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-alsa \
    gstreamer1.0-gl \
    gstreamer1.0-gtk3 \
    gstreamer1.0-x \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    # PyGObject e dependências
    python3-gi \
    python3-gi-cairo \
    python3-gst-1.0 \
    libgirepository1.0-dev \
    libcairo2-dev \
    pkg-config \
    gobject-introspection \
    gir1.2-gst-plugins-base-1.0 \
    gir1.2-gstreamer-1.0 \
    gir1.2-gtk-3.0 \
    # Dependências específicas do worker
    libgtk-3-0 \
    libgtk-3-dev \
    libxss1 \
    libnss3 \
    libgconf-2-4 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libpango1.0-dev \
    libatk1.0-0 \
    libatk1.0-dev \
    libcairo-gobject2 \
    libcairo2-dev \
    libgdk-pixbuf2.0-0 \
    libgdk-pixbuf2.0-dev \
    gir1.2-gst-rtsp-server-1.0 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# --- Instalação do Miniconda ---
RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh && \
    conda clean -afy

# --- Criação do Ambiente Conda com Mamba ---
RUN conda install -n base mamba -c conda-forge -y && \
    mamba create -n presence python=3.10 \
    pytorch torchvision torchaudio pytorch-cuda=11.8 \
    faiss-gpu \
    pygobject \
    pycairo \
    -c pytorch -c nvidia -c conda-forge -y && \
    conda clean -afy

# --- Instalação de pacotes Python adicionais para GStreamer ---
RUN conda run -n presence pip install --no-cache-dir \
    PyGObject \
    pycairo \
    opencv-python-headless

# --- Diretório de trabalho ---
WORKDIR /root/presence

# --- Verificar instalação do GStreamer ---
RUN mkdir -p /tmp/gstreamer-debug && \
    chmod 777 /tmp/gstreamer-debug && \
    gst-inspect-1.0 --version && \
    gst-inspect-1.0 fakesink && \
    gst-inspect-1.0 v4l2src || echo "v4l2src não disponível, mas isso é normal em contêineres"

# --- Teste GStreamer com Python ---
RUN conda run -n presence python -c "import gi; gi.require_version('Gst', '1.0'); from gi.repository import Gst; Gst.init(None); print('✓ GStreamer inicializado com sucesso!');" || echo "⚠ GStreamer não pôde ser inicializado"

# Configurar variáveis de ambiente para o container
ENV PYTHONPATH=/root/presence
ENV INSIGHTFACE_HOME=/root/presence/data/models
ENV GST_DEBUG=2
ENV GST_DEBUG_DUMP_DOT_DIR=/tmp/gstreamer-debug
ENV GI_TYPELIB_PATH=/usr/lib/x86_64-linux-gnu/girepository-1.0 
